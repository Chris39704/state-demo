{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "extends": [
        "react-app",
        "prettier"
    ],
    "plugins": [
        "@typescript-eslint",
        "prettier"
    ],
    "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "tsconfigRootDir": "./",
        "extraFileExtensions": [
            ".json"
        ],
        "project": "./tsconfig.eslint.json",
        "ecmaFeatures": {
            "jsx": true
        },
        "warnOnUnsupportedTypeScriptVersion": false
    },
    "rules": {
        "prettier/prettier": "error",
        "no-unused-vars": "off",
        "no-unused-expressions": "off",
        "eol-last": "off",
        "prefer-const": "warn",
        "import/order": "off",
        "import/no-unresolved": "error",
        "import/no-duplicates": "error",
        "import/newline-after-import": "error",
        "react/jsx-props-no-spreading": 1,
        "react-hooks/rules-of-hooks": "off",
        "react-hooks/exhaustive-deps": "off",
        "tree-shaking/no-side-effects-in-initialization": 0
    },
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/cache": {
            "lifetime": 15
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
            }
        }
    },
    "overrides": [
        {
            "plugins": [
                "@typescript-eslint"
            ],
            "extends": [
                "plugin:import/typescript",
                "prettier/@typescript-eslint"
            ],
            "files": [
                "**/*.ts?(x)"
            ],
            "rules": {
                "@typescript-eslint/no-floating-promises": [
                    "off"
                ],
                "@typescript-eslint/no-empty-interface": [
                    "error",
                    {
                        "allowSingleExtends": true
                    }
                ],
                "@typescript-eslint/unbound-method": "off",
                "@typescript-eslint/no-unsafe-return": "off",
                "@typescript-eslint/explicit-module-boundary-types": "off",
                "@typescript-eslint/no-inferrable-types": "warn",
                "@typescript-eslint/no-unsafe-member-access": "off",
                "@typescript-eslint/no-unused-expressions": [
                    2,
                    {
                        "allowShortCircuit": true,
                        "allowTernary": true,
                        "allowTaggedTemplates": true
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "warn",
                    {
                        "selector": "interface",
                        "format": [
                            "PascalCase"
                        ],
                        "prefix": [
                            "I"
                        ]
                    }
                ],
                "@typescript-eslint/explicit-member-accessibility": 0,
                "@typescript-eslint/no-var-requires": [
                    "warn"
                ],
                "@typescript-eslint/no-non-null-assertion": 0,
                "@typescript-eslint/no-explicit-any": 0,
                "@typescript-eslint/no-unused-vars": [
                    "warn"
                ],
                "@typescript-eslint/prefer-includes": [
                    "warn"
                ]
            }
        },
        {
            "files": [
                "*.{j,t}sx"
            ],
            "plugins": [
                "react-perf"
            ],
            "rules": {
                "react-perf/jsx-no-new-object-as-prop": "warn",
                "react-perf/jsx-no-new-array-as-prop": "off",
                "react-perf/jsx-no-new-function-as-prop": "off",
                "react-perf/jsx-no-jsx-as-prop": "off",
                "react-hooks/rules-of-hooks": "off",
                "react-hooks/exhaustive-deps": "off",
                "react/prop-types": "off",
                "react/jsx-props-no-spreading": "off"
            }
        },
        {
            "extends": [
                "plugin:jest/recommended",
                "plugin:jest-formatting/recommended",
                "plugin:jest-dom/recommended",
                "plugin:testing-library/react"
            ],
            "files": [
                "./src/**/__tests__/**/*.test.{ts,tsx}"
            ],
            "rules": {
                "jest/expect-expect": "off",
                "jest/no-identical-title": "warn"
            }
        }
    ]
}